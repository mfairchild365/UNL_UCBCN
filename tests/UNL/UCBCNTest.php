<?php
// Call UNL_UCBCNTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "UNL_UCBCNTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once 'UNL/UCBCN.php';

/**
 * Test class for UNL_UCBCN.
 * Generated by PHPUnit_Util_Skeleton on 2006-11-17 at 11:33:46.
 */
class UNL_UCBCNTest extends PHPUnit_Framework_TestCase {
    
    public $dsn = 'sqlite://events:password@localhost/events.db';
    
    /**
     * UNL_UCBCN backend system
     *
     * @var object
     */
    public $b;
    
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("UNL_UCBCNTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
       $this->b = new UNL_UCBCN(array('dsn'=>$this->dsn));
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

    /**
     * Finished.
     */
    public function testSetupDBConn() {
        $this->b->setupDBconn();
        $dboptions = &PEAR::getStaticProperty('DB_DataObject','options');
        $this->assertEquals($dboptions['database'],$this->dsn);
    }

    /**
     * Finished.
     */
    public function testSetOptions() {
        global $_UNL_UCBCN;
        $test = new UNL_UCBCN(array('dsn'=>$this->dsn,'template'=>'davey'));
        // Test that value was set.
        $this->assertEquals($test->dsn,$this->dsn);
        $this->assertEquals($test->template,'davey');
        // Test that setOptions correctly set a global variable.
        $this->assertEquals($_UNL_UCBCN['template'],'davey');
    }

    /**
     * @todo Implement testGetEventCount().
     */
    public function testGetEventCount() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testFactory().
     */
    public function testFactory() {
        
        $a = $this->b->factory('account');
        
        $this->assertEquals(get_class($a),'UNL_UCBCN_Account');
    }

    /**
     * Checks the getUser() function.
     */
    public function testGetUser() {
        
        $u = $this->b->getUser('myuser');
        $this->assertEquals(get_class($u),'UNL_UCBCN_User');
        $this->assertEquals($u->uid,'myuser');
    }
    
    /**
     * @todo Implement testCreateUser().
     */
    public function testCreateUser() {
        
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testDbInsert().
     */
    public function testDbInsert() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testUserHasPermission().
     */
    public function testUserHasPermission() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testShowError().
     */
    public function testShowError() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testDisplayRegion().
     */
    public function testDisplayRegion() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testSendObjectOutput().
     */
    public function testSendObjectOutput() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testGrantPermission().
     */
    public function testGrantPermission() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testCreateAccount().
     */
    public function testCreateAccount() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testAddCalendarHasEvent().
     */
    public function testAddCalendarHasEvent() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testCalendarHasEvent().
     */
    public function testCalendarHasEvent() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testGetAccount().
     */
    public function testGetAccount() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testGetCalendar().
     */
    public function testGetCalendar() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testCreateCalendar().
     */
    public function testCreateCalendar() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testLocalRedirect().
     */
    public function testLocalRedirect() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testGetAbsoluteURL().
     */
    public function testGetAbsoluteURL() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testGetTemplateFilename().
     */
    public function testGetTemplateFilename() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testGetDatabaseConnection().
     */
    public function testGetDatabaseConnection() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testOutputTemplate().
     */
    public function testOutputTemplate() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testGetURL().
     */
    public function testGetURL() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testArchiveEvents().
     */
    public function testArchiveEvents() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testCleanCache().
     */
    public function testCleanCache() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }

    /**
     * @todo Implement testUserCanEditEvent().
     */
    public function testUserCanEditEvent() {
        // Remove the following line when you implement this test.
        $this->markTestIncomplete(
          "This test has not been implemented yet."
        );
    }
}

// Call UNL_UCBCNTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "UNL_UCBCNTest::main") {
    UNL_UCBCNTest::main();
}
?>
